+ inline-block 모델

  - inline모델과  block모델의 표현방식이 섞인 것
  
  - 내부 동작은 블록모델
      요소의 자체 레이아웃
      width, height, border, padding, margin 모두 적용 가능
      
  - 외부 동작은 인라인모델
      외부 요소와의 관계에 대한 레이아웃
      
      블록처럼 한 줄을 다 차지하지 않는다
      인라인처럼 한 줄에 여러 요소 배치가 가능함    
           
+ 자체 레이아웃

  - width, height 속성
        설정 가능
        
        내용물 크기에 맞추려면 auto값으로 설정 (height)
        부모요소에 맞추려면 100%값으로 설정 (width)
        
  - margin-top, margin-bottom : 설정 가능
  
  - margin-left, margin-right : 설정 가능
      외부 요소와의 간격으로 사용되며 인라인모델처럼 동작한다
  
  
+ table 모델

    display: table;

 - <table>의 레이아웃
 
 - 외부 레이아웃은 블록과 유사
 
 - width 설정 가능
 - 적용하지 않은 내용물(table-cell)들의 너비만큼 영역을 가진다(auto)
 
 - height 설정 가능
 - 적용하지 않은 내용물(table-row)들의 높이만큼 영역을 가진다(auto)
 
 - padding 설정 가능
        table의 테두리와 table-cell들의 테두리 사이 공간이 넓어짐
 
 - margin 설정 가능
        table의 외부여백
        
 - <tr>태그는 padding, margin은 적용해도 변화가 없다.
 - <tr>태그는 width 적용안됨, height는 적용된다
 
 - <th>, <td>태그는 padding 적용가능, margin이 적용 안됨
 - <th>, <td>태그는 width, height 둘 다 적용된다
 
 - <table>, table-cell(<th>,<td>)에 각각 테두리가 존재한다
 - <tr>에는 테두리가 없다
 
 - border-collapse 속성을 설정할 수 있다
        border-collapse: separate;
        border-collapse: collapse;
        
+ position 속성
  
  - 레이아웃 배치 속성
  
  - 요소의 위치에 대한 설정 속성
  
  - position을 설정하더라도 기본 display 속성은 유지
  
  - static
          기본 위치
          해당 요소가 자연스럽게 위치했어야하는 곳에 배치된다.
          
  - ablsolute
          절대 위치를 지정한다
          
          기준위치는 position 속성을 받은 부모요소의 레이아웃
          (상하좌우 네 벽면을 기준으로 삼는다)
          
          부모요소가 position속성이 없다면 첫 화면을 기준으로 위치가 지정된다.
          
  - relative
          
          상대위치를 지정한다
          기존에 자기가 표현되어야하는 위치의 좌측상단지점을 기준으로 이동
  
          기존 해당 요소가 존재했어야하는 공간이 유지된다
          다른 태그가 해당 공간을 사용하지 않고 비워둔다
                      -> 상대위치박스는 이동시키지 않고 사용한다
                      
                      
  - fixed
  
          고정 위치를 지정한다
          
          보고있는 화면의 상하좌우 벽면을 기준으로 삼고 이동한다.
  
          스크롤을 따라온다.
        
          - top, bttom, left, right 속성을 이용하여 요소의 위치를 반영한다.
          
          - 이동되는 위치의 기준점이 position의 속성마다 다르다
          
  ** relative를 부모요소로 두고 absolute를 자식요소로 넣어서 많이 사용한다.  
  
  ** position: absolute; 가 부여되면 기존 HTML 문서 구조를 무시하고
     절대위치를 설정하게 된다
            -> 브라우저의 첫 화면을 기준으로 삼는다.
            
            -> relative를 부모요소로 두면 absolute의 절대 위치 기준점이 
               부모요소로 설정된다
               
+ 시맨틱 레이아웃, Semantic Layout (시험에서 나올 수 있으니 제대로 쓰는 방법 좀 알아둘 것)

  - 시맨틱 태그(Semantic Tag)
  
  - 웹페이지의 레이아웃 구조를 쉽게 이해할 수 있도록 이름을 붙인 것
  
  - 태그의 이름을 확인하면 HTML 문서의 구조를 대락적으로 짐잘할 수 있도록 한다.
  
  - 검색엔진이 페이지의 구성을 파악할 수 있도록 해준다.
  
      <header>
            사이트 소개, 로고 등의 머리글 지정
            주로 위쪽에 삽입한다
            
      <nav>
            navigation, navigator, 메뉴
             동일한 도메인(자기 사이트) 내에서 다른 문서로 
             연결하는 링크들의 모음 
             
             
      <aside>
            사이드바
            광고, 배너, 작은 메뉴 등
            본문이외의 내용을 표시하는 곳
      
      <section>
            실제 문서 내용, 본문
            컨텐츠 영역
            주제별 카테고리 역할
            
      <article>
            <section> 카테고리 내에서 내용물이 되는 태그
            
      <footer>
           바닥글
           사이트의 저작권
           제작자
           사업자등록 번호
           주소, 전화번호, 간단한 회사 정보

           ** 이용약관, 개인정보취급방침 (필수)
